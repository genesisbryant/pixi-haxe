{
"version":3,
"file":"deviceinfo.js",
"sourceRoot":"file:///",
"sources":["/Users/Bryant/Projects/pixi-haxe/pixi/plugins/app/Application.hx","/Users/Bryant/Projects/pixi-haxe/samples/deviceinfo/Main.hx"],
"sourcesContent":["package pixi.plugins.app;\n\nimport js.html.DivElement;\nimport js.html.Element;\nimport pixi.core.renderers.webgl.WebGLRenderer;\nimport pixi.core.renderers.canvas.CanvasRenderer;\nimport pixi.core.renderers.Detector;\nimport pixi.core.display.Container;\nimport js.html.Event;\nimport js.html.CanvasElement;\nimport js.Browser;\n\n#if fps import jsfps.simplefps.Fps; #end\n#if fpsmeter import jsfps.fpsmeter.FPSMeter; #end\n#if stats import jsfps.stats.Stats; #end\n\n/**\n * Pixi Boilerplate Helper class that can be used by any application\n * @author Adi Reddy Mora\n * http://adireddy.github.io\n * @license MIT\n * @copyright 2015\n */\nclass Application {\n\n\t/**\n     * Sets the pixel ratio of the application.\n     * default - 1\n     */\n\tpublic var pixelRatio:Float;\n\n\t/**\n\t * Default frame rate is 60 FPS and this can be set to true to get 30 FPS.\n\t * default - false\n\t */\n\tpublic var skipFrame(default, set):Bool;\n\n\t/**\n\t * Default frame rate is 60 FPS and this can be set to anything between 1 - 60.\n\t * default - 60\n\t */\n\tpublic var fps(default, set):Int;\n\n\t/**\n\t * Width of the application.\n\t * default - Browser.window.innerWidth\n\t */\n\tpublic var width:Float;\n\n\t/**\n\t * Height of the application.\n\t * default - Browser.window.innerHeight\n\t */\n\tpublic var height:Float;\n\n\t/**\n\t * Renderer transparency property.\n\t * default - false\n\t */\n\tpublic var transparent:Bool;\n\n\t/**\n\t * Graphics antialias property.\n\t * default - false\n\t */\n\tpublic var antialias:Bool;\n\n\t/**\n\t * Force FXAA shader antialias instead of native (faster).\n\t * default - false\n\t */\n\tpublic var forceFXAA:Bool;\n\n\t/**\n\t * Force round pixels.\n\t * default - false\n\t */\n\tpublic var roundPixels:Bool;\n\n\t/**\n\t * Whether you want to resize the canvas and renderer on browser resize.\n\t * Should be set to false when custom width and height are used for the application.\n\t * default - true\n\t */\n\tpublic var autoResize:Bool;\n\n\t/**\n\t * Sets the background color of the stage.\n\t * default - 0xFFFFFF\n\t */\n\tpublic var backgroundColor:Int;\n\n\t/**\n\t * Update listener \tfunction\n\t */\n\tpublic var onUpdate:Float -> Void;\n\n\t/**\n\t * Window resize listener \tfunction\n\t */\n\tpublic var onResize:Void -> Void;\n\n\t/**\n\t * Canvas Element\n\t * Read-only\n\t */\n\tpublic var canvas(default, null):CanvasElement;\n\n\t/**\n\t * Renderer\n\t * Read-only\n\t */\n\tpublic var renderer(default, null):Dynamic;\n\n\t/**\n\t * Global Container.\n\t * Read-only\n\t */\n\tpublic var stage(default, null):Container;\n\n\tpublic static inline var AUTO:String = \"auto\";\n\tpublic static inline var RECOMMENDED:String = \"recommended\";\n\tpublic static inline var CANVAS:String = \"canvas\";\n\tpublic static inline var WEBGL:String = \"webgl\";\n\n\tvar _lastTime:Date;\n\tvar _currentTime:Date;\n\tvar _elapsedTime:Float;\n\tvar _frameCount:Int;\n\n\t#if fps\n\tvar _fps:Fps;\n\tvar _fpsDiv:DivElement;\n\t#end\n\n\t#if stats var _stats:Stats; #end\n\t#if fpsmeter var _fpsMeter:FPSMeter; #end\n\n\tpublic function new() {\n\t\t_lastTime = Date.now();\n\t\t_setDefaultValues();\n\t}\n\n\tfunction set_fps(val:Int):Int {\n\t\t_frameCount = 0;\n\t\treturn fps = (val >= 1 && val < 60) ? Std.int(val) : 60;\n\t}\n\n\tfunction set_skipFrame(val:Bool):Bool {\n\t\tif (val) {\n\t\t\ttrace(\"pixi.plugins.app.Application > Deprecated: skipFrame - use fps property and set it to 30 instead\");\n\t\t\tfps = 30;\n\t\t}\n\t\treturn skipFrame = val;\n\t}\n\n\tinline function _setDefaultValues() {\n\t\tpixelRatio = 1;\n\t\tskipFrame = false;\n\t\tautoResize = true;\n\t\ttransparent = false;\n\t\tantialias = false;\n\t\tforceFXAA = false;\n\t\troundPixels = false;\n\t\tbackgroundColor = 0xFFFFFF;\n\t\twidth = Browser.window.innerWidth;\n\t\theight = Browser.window.innerHeight;\n\t\tfps = 60;\n\t}\n\n\t/**\n\t * Starts pixi application setup using the properties set or default values\n\t * @param [rendererType] - Renderer type to use AUTO (default) | CANVAS | WEBGL\n\t * @param [stats] - Enable/disable stats for the application.\n\t * Note that stats.js is not part of pixi so don't forget to include it you html page\n\t * Can be found in libs folder. \"libs/stats.min.js\" <script type=\"text/javascript\" src=\"libs/stats.min.js\"></script>\n\t * @param [parentDom] - By default canvas will be appended to body or it can be appended to custom element if passed\n\t */\n\n\tpublic function start(?rendererType:String = \"auto\", ?parentDom:Element) {\n\t\tcanvas = Browser.document.createCanvasElement();\n\t\tcanvas.style.width = width + \"px\";\n\t\tcanvas.style.height = height + \"px\";\n\t\tcanvas.style.position = \"absolute\";\n\t\tif (parentDom == null) Browser.document.body.appendChild(canvas);\n\t\telse parentDom.appendChild(canvas);\n\n\t\tstage = new Container();\n\n\t\tvar renderingOptions:RenderingOptions = {};\n\t\trenderingOptions.view = canvas;\n\t\trenderingOptions.backgroundColor = backgroundColor;\n\t\trenderingOptions.resolution = pixelRatio;\n\t\trenderingOptions.antialias = antialias;\n\t\trenderingOptions.forceFXAA = forceFXAA;\n\t\trenderingOptions.autoResize = autoResize;\n\t\trenderingOptions.transparent = transparent;\n\n\t\tif (rendererType == AUTO) renderer = Detector.autoDetectRenderer(width, height, renderingOptions);\n\t\telse if (rendererType == CANVAS) renderer = new CanvasRenderer(width, height, renderingOptions);\n\t\telse renderer = new WebGLRenderer(width, height, renderingOptions);\n\n\t\tif (roundPixels) renderer.roundPixels = true;\n\n\t\tBrowser.document.body.appendChild(renderer.view);\n\t\tif (autoResize) Browser.window.onresize = _onWindowResize;\n\t\tBrowser.window.requestAnimationFrame(cast _onRequestAnimationFrame);\n\t\t_lastTime = Date.now();\n\n\t\t_addStats();\n\t}\n\n\t@:noCompletion function _onWindowResize(event:Event) {\n\t\twidth = Browser.window.innerWidth;\n\t\theight = Browser.window.innerHeight;\n\t\trenderer.resize(width, height);\n\t\tcanvas.style.width = width + \"px\";\n\t\tcanvas.style.height = height + \"px\";\n\n\t\tif (onResize != null) onResize();\n\t}\n\n\t@:noCompletion function _onRequestAnimationFrame() {\n\t\t_frameCount++;\n\t\tif (_frameCount == Std.int(60 / fps)) {\n\t\t\t_frameCount = 0;\n\t\t\t_calculateElapsedTime();\n\t\t\tif (onUpdate != null) onUpdate(_elapsedTime);\n\t\t\trenderer.render(stage);\n\t\t}\n\t\tBrowser.window.requestAnimationFrame(cast _onRequestAnimationFrame);\n\n\t\t#if fps _fps.tick(); #end\n\t\t#if stats if (_stats != null) _stats.update(); #end\n\t\t#if fpsmeter if (_fpsMeter != null) _fpsMeter.tick(); #end\n\t}\n\n\t@:noCompletion function _calculateElapsedTime() {\n\t\t_currentTime = Date.now();\n\t\t_elapsedTime = _currentTime.getTime() - _lastTime.getTime();\n\t\t_lastTime = _currentTime;\n\t}\n\n\t@:noCompletion function _addStats() {\n\t\t#if fps\n\t\t_fps = new Fps(_updateFps);\n\t\t_fpsDiv = Browser.document.createDivElement();\n\t\t_fpsDiv.style.position = \"absolute\";\n\t\t_fpsDiv.style.right = \"0px\";\n\t\t_fpsDiv.style.top = \"14px\";\n\t\t_fpsDiv.style.width = \"76px\";\n\t\t_fpsDiv.style.background = \"#CCCCC\";\n\t\t_fpsDiv.style.backgroundColor = \"#00FF00\";\n\t\t_fpsDiv.style.fontFamily = \"Helvetica,Arial\";\n\t\t_fpsDiv.style.padding = \"2px\";\n\t\t_fpsDiv.style.color = \"#000000\";\n\t\t_fpsDiv.style.fontSize = \"9px\";\n\t\t_fpsDiv.style.fontWeight = \"bold\";\n\t\t_fpsDiv.style.textAlign = \"center\";\n\t\t_fpsDiv.innerHTML = \"FPS: 60\";\n\t\tBrowser.document.body.appendChild(_fpsDiv);\n\t\t_addRenderStats();\n\t\t#end\n\n\t\t#if stats\n\t\tif (untyped __js__(\"window\").Stats != null) {\n\t\t\tvar container = Browser.document.createDivElement();\n\t\t\tBrowser.document.body.appendChild(container);\n\t\t\t_stats = new Stats();\n\t\t\t_stats.domElement.style.position = \"absolute\";\n\t\t\t_stats.domElement.style.top = \"14px\";\n\t\t\t_stats.domElement.style.right = \"0px\";\n\t\t\tcontainer.appendChild(_stats.domElement);\n\t\t\t_stats.begin();\n\t\t\t_addRenderStats();\n\t\t}\n\t\telse trace(\"Unable to find stats.js\");\n\t\t#end\n\n\t\t#if fpsmeter\n\t\tif (untyped __js__(\"window\").FPSMeter != null) {\n\t\t\t_fpsMeter = new FPSMeter( {theme: \"colorful\", top: \"14px\", right: \"0px\", left: \"auto\"});\n\t\t\t_addRenderStats();\n\t\t}\n\t\telse trace(\"Unable to find fpsmeter.js\");\n\t\t#end\n\t}\n\n\tinline function _addRenderStats(?top:Int = 0) {\n\t\tvar ren:DivElement = Browser.document.createDivElement();\n\t\tren.style.position = \"absolute\";\n\t\tren.style.width = \"76px\";\n\t\tren.style.right = \"0px\";\n\t\tren.style.background = \"#CCCCC\";\n\t\tren.style.backgroundColor = \"#105CB6\";\n\t\tren.style.fontFamily = \"Helvetica,Arial\";\n\t\tren.style.padding = \"2px\";\n\t\tren.style.color = \"#0FF\";\n\t\tren.style.fontSize = \"9px\";\n\t\tren.style.fontWeight = \"bold\";\n\t\tren.style.textAlign = \"center\";\n\t\tBrowser.document.body.appendChild(ren);\n\t\tren.innerHTML = [\"UNKNOWN\", \"WEBGL\", \"CANVAS\"][renderer.type] + \" - \" + pixelRatio;\n\t}\n\n\t#if fps\n\tfunction _updateFps(val:Float) {\n\t\t_fpsDiv.innerHTML = \"FPS: \" + val;\n\t}\n\t#end\n}","package samples.deviceinfo;\n\nimport pixi.core.display.Container;\nimport pixi.core.text.Text;\nimport pixi.plugins.app.Application;\nimport js.Browser;\n\nclass Main extends Application {\n\n\tvar _info:Container;\n\n\tvar _rendererType:Array<String>;\n\n\tpublic function new() {\n\t\tsuper();\n\t\t_init();\n\t}\n\n\tfunction _init() {\n\t\tbackgroundColor = 0x003366;\n\t\tsuper.start();\n\n\t\t_rendererType = [\"Unknown\", \"WebGL\", \"Canvas\"];\n\n\t\t_info = new Container();\n\t\tstage.addChild(_info);\n\n\t\tvar txt = new Text(\"\", {fill: \"#FFFFFF\"});\n\t\ttxt.text = \"Resolution: \\t\\t\" + Browser.window.innerWidth + \" x \" + Browser.window.innerHeight;\n\t\t_info.addChild(txt);\n\n\t\ttxt = new Text(\"\", {fill: \"#FFFFFF\"});\n\t\ttxt.text = \"Pixel Ratio: \\t\\t\" + Browser.window.devicePixelRatio;\n\t\ttxt.y = 40;\n\t\t_info.addChild(txt);\n\n\t\ttxt = new Text(\"\", {fill: \"#FFFFFF\"});\n\t\ttxt.text = \"Renderer: \\t\\t\\t\\t\\t\" + _rendererType[renderer.type];\n\t\ttxt.y = 80;\n\t\t_info.addChild(txt);\n\n\t\t_info.position.x = (Browser.window.innerWidth - _info.width) / 2;\n\t\t_info.position.y = (Browser.window.innerHeight - _info.height) / 2;\n\t}\n\n\tstatic function main() {\n\t\tnew Main();\n\t}\n}"],
"names":[],
"mappings":";;;;;;;+BA0IO,pBAAe;CACrB,EAAY;CACZ;;;;;;;;;;;;;SAGD,KAA8B;EAC7B,CAAc;EACd,KAAa,AAAC,HAAO,AAAK,DAAM,FAAzB,EAA+B,AAAQ,AAAR,FAA/B,EAA8C;;eAGtD,DAAsC;EACrC,AAAI,DAAK;GACR,SAAM;GACN,FAAM;;EAEP,KAAO,JAAY;;OA0Bb;;EACG;EAAT,CAAS;EACT,CAAqB,AAAQ;EAC7B,CAAsB,AAAS;EAC/B,CAAwB;EACxB,AAAI,EAAa,HAAM,AAAkC,KACpD,LAAsB;EAE3B,CAAQ;EAEgC;EACxC,CAAwB;EACxB,CAAmC;EACnC,CAA8B;EAC9B,CAA6B;EAC7B,CAA6B;EAC7B,CAA8B;EAC9B,CAA+B;EAE/B,AAAI,EAAgB,HAAM,EAAW,FAA4B,AAAO,AAAQ,KAC3E,JAAI,EAAgB,HAAQ,EAAW,iBAAmB,nBAAO,AAAQ,KACzE,HAAW,gBAAkB,lBAAO,AAAQ;EAEjD,AAAI,DAAa,EAAuB;EAExC,DAAkC;EAClC,AAAI,DAAY,EAA0B;EAC1C,DAAqC,AAAK;EAC1C,CAAY;EAEZ;;iBAGc,DAAsC;EACpD,CAAQ;EACR,CAAS;EACT,DAAgB,AAAO;EACvB,CAAqB,AAAQ;EAC7B,CAAsB,AAAS;EAE/B,AAAI,EAAY,HAAM;;0BAGR,fAAoC;EAClD;EACA,AAAI,EAAe,HAAQ,EAAK,AAAb,FAAmB;GACrC,AAAc;GACd;GACA,DAAI,EAAY,HAAM,AAAS;GAC/B,FAAgB;;EAEjB,DAAqC,AAAK;EAGhC,AAAI,EAAU,HAAM;;uBAIhB,ZAAiC;EAC/C,CAAe;EACf,CAAe,AAAyB;EACxC,CAAY;;WAGE,AAsBd;EAAY,EAA0B,HAAM;GAC3B;;;GAChB,FAAkC;GAClC,AAAS;GACT,AAAmC;GACnC,AAA8B;GAC9B,AAAgC;GAChC,FAAsB;GACtB;GACA;MAEI,MAAM;;iBAYL;;EACe;;;EACrB,CAAqB;EACrB,CAAkB;EAClB,CAAkB;EAClB,CAAuB;EACvB,CAA4B;EAC5B,CAAuB;EACvB,CAAoB;EACpB,CAAkB;EAClB,CAAqB;EACrB,CAAuB;EACvB,CAAsB;EACtB,DAAkC;EAClC,CAAgB,FAAC,AAAW,AAAS,AAAU,EAAiB,AAAQ;;;0BCjSlE,fAAe;CACrB;CACA;;+BA8BM,pBACN;;;;;OA5BD,IAAiB;EAChB,CAAkB;EAClB;EAEA,CAAgB,FAAC,AAAW,AAAS;EAErC,CAAQ;EACR,DAAe;EAEL,QAAS,TAAI,MAAO;EAC9B,CAAW,AAAqB,AAA4B,AAAQ;EACpE,DAAe;EAEf,CAAM,OAAS,TAAI,MAAO;EAC1B,CAAW,AAAsB;EACjC,CAAQ;EACR,DAAe;EAEf,CAAM,OAAS,TAAI,MAAO;EAC1B,CAAW,AAAyB,FAAc;EAClD,CAAQ;EACR,DAAe;EAEf,CAAmB,FAAC,EAA4B,AAAe;EAC/D,CAAmB,FAAC,EAA6B,AAAgB;;;;;;;;"
}